<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的博客_笔记记录</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-09T07:34:45.630Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ygL</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>博客记录</title>
    <link href="http://yoursite.com/2018/04/09/%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2018/04/09/博客记录/</id>
    <published>2018-04-09T07:04:39.000Z</published>
    <updated>2018-04-09T07:34:45.630Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo博客"><a href="#hexo博客" class="headerlink" title="hexo博客"></a>hexo博客</h1><p>地址：<a href="https://lygsgit.github.io/" target="_blank" rel="noopener">hexo</a><br><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo官方文档</a><br>hexo n “我的博客” == hexo new “我的博客” #新建文章<br>hexo p == hexo publish<br>hexo g == hexo generate#生成<br>hexo s == hexo server #启动服务预览<br>hexo d == hexo deploy#部署<br>hexo d -g  修改后一键部署<br><a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">主题yilia的github</a></p><h1 id="flask"><a href="#flask" class="headerlink" title="flask"></a>flask</h1><p>地址：D:\pythonfile\flask_web\guanfang\flaskr<br><a href="http://docs.jinkan.org/docs/flask/" target="_blank" rel="noopener">flask官方文档</a><br>python flaskr.py</p><p>使用sqlite3数据库，D:\pythonfile\flask_web\guanfang\flaskr\tmp\flaskr.db<br><a href="http://www.runoob.com/sqlite/sqlite-tutorial.html" target="_blank" rel="noopener">sqlite3教程</a><br>sqlite3 数据库文件名<br>sqlite3<br>.help<br>.open 数据库文件名<br>.show 查看配置<br>.header on<br>.title on<br>.mode column<br>.tables</p><h1 id="django"><a href="#django" class="headerlink" title="django"></a>django</h1><p>地址：F:\django1\mysite<br><a href="https://www.cnblogs.com/fnng/p/3737964.html" target="_blank" rel="noopener">django虫师文档</a><br>python manage.py runserver</p><p>使用mysql数据库<br><a href="http://www.runoob.com/mysql/mysql-install.html" target="_blank" rel="noopener">mysql教程</a></p><p>本地mysql：<br>mysql -u root -p<br>密码：admin123】】】<br>show databases<br>use<br>show tables</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hexo博客&quot;&gt;&lt;a href=&quot;#hexo博客&quot; class=&quot;headerlink&quot; title=&quot;hexo博客&quot;&gt;&lt;/a&gt;hexo博客&lt;/h1&gt;&lt;p&gt;地址：&lt;a href=&quot;https://lygsgit.github.io/&quot; target=&quot;_blank
      
    
    </summary>
    
    
      <category term="-笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>&#39;windows端口占用&#39;</title>
    <link href="http://yoursite.com/2018/04/04/windows%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/"/>
    <id>http://yoursite.com/2018/04/04/windows端口占用/</id>
    <published>2018-04-04T03:07:23.000Z</published>
    <updated>2018-04-04T03:16:20.361Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查找端口对应的进程号"><a href="#查找端口对应的进程号" class="headerlink" title="查找端口对应的进程号"></a>查找端口对应的进程号</h1><p>netstat -aon|findstr ‘端口’        查看指定端口的占用情况<br>C:\Users\xxx&gt;netstat -ano|findstr “5000”<br>  TCP    0.0.0.0:5000           0.0.0.0:0              LISTENING       9192<br>  TCP    127.0.0.1:5000         0.0.0.0:0              LISTENING       11472<br>  TCP    127.0.0.1:5000         0.0.0.0:0              LISTENING       1644</p><h1 id="根据进程号查找进程名"><a href="#根据进程号查找进程名" class="headerlink" title="根据进程号查找进程名"></a>根据进程号查找进程名</h1><p>tasklist|findstr 9192<br>C:\Users\xxx&gt;tasklist|findstr 9192<br>python.exe                    9192 Console                    1     22,692 K</p><h1 id="根据进程名杀死进程"><a href="#根据进程名杀死进程" class="headerlink" title="根据进程名杀死进程"></a>根据进程名杀死进程</h1><p>taskkill /f /t /im python.exe<br>C:\Users\xxx&gt;taskkill /f /t /im python.exe<br>成功: 已终止 PID 11012 (属于 PID 1644 子进程)的进程。<br>成功: 已终止 PID 4276 (属于 PID 11472 子进程)的进程。<br>成功: 已终止 PID 4996 (属于 PID 9192 子进程)的进程。<br>成功: 已终止 PID 1644 (属于 PID 2532 子进程)的进程。<br>成功: 已终止 PID 11472 (属于 PID 2532 子进程)的进程。<br>成功: 已终止 PID 9192 (属于 PID 3908 子进程)的进程。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;查找端口对应的进程号&quot;&gt;&lt;a href=&quot;#查找端口对应的进程号&quot; class=&quot;headerlink&quot; title=&quot;查找端口对应的进程号&quot;&gt;&lt;/a&gt;查找端口对应的进程号&lt;/h1&gt;&lt;p&gt;netstat -aon|findstr ‘端口’        查看指定端
      
    
    </summary>
    
    
      <category term="-windows -端口" scheme="http://yoursite.com/tags/windows-%E7%AB%AF%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>&#39;hexo带图片的blog&#39;</title>
    <link href="http://yoursite.com/2018/03/28/hexo%E5%B8%A6%E5%9B%BE%E7%89%87%E7%9A%84blog/"/>
    <id>http://yoursite.com/2018/03/28/hexo带图片的blog/</id>
    <published>2018-03-28T06:07:21.000Z</published>
    <updated>2018-03-28T06:23:25.898Z</updated>
    
    <content type="html"><![CDATA[<p>lady luck is smiling</p><h2 id="1-主页配置文件-config-yml-里的post-asset-folder-这个选项设置为true"><a href="#1-主页配置文件-config-yml-里的post-asset-folder-这个选项设置为true" class="headerlink" title="1.主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true"></a>1.主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true</h2><h2 id="2-第一种方法："><a href="#2-第一种方法：" class="headerlink" title="2.第一种方法："></a>2.第一种方法：</h2><h3 id=""><a href="#" class="headerlink" title=""></a><img src="/2018/03/28/hexo带图片的blog/2018/03/28/hexo带图片的blog/big4006.jpg" title="这是这张图片的图片说明"></h3><img src="/2018/03/28/hexo带图片的blog/2018/03/28/hexo带图片的blog/big4006.jpg" title="这是这张图片的图片说明"><h2 id="3-第二种方法"><a href="#3-第二种方法" class="headerlink" title="3.第二种方法"></a>3.第二种方法</h2><h3 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="/2018/03/28/hexo带图片的blog/big4006.jpg" alt="这是这张图片的图片说明"></h3><p><img src="/2018/03/28/hexo带图片的blog/big4006.jpg" alt="这是这张图片的图片说明"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;lady luck is smiling&lt;/p&gt;
&lt;h2 id=&quot;1-主页配置文件-config-yml-里的post-asset-folder-这个选项设置为true&quot;&gt;&lt;a href=&quot;#1-主页配置文件-config-yml-里的post-asset-folder-这
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="图片" scheme="http://yoursite.com/tags/%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>python + selenium 网页时间控件</title>
    <link href="http://yoursite.com/2018/03/05/python%20+%20selenium%20%E7%BD%91%E9%A1%B5%E6%97%B6%E9%97%B4%E6%8E%A7%E4%BB%B6/"/>
    <id>http://yoursite.com/2018/03/05/python + selenium 网页时间控件/</id>
    <published>2018-03-05T06:19:00.000Z</published>
    <updated>2018-03-28T03:32:51.758Z</updated>
    
    <content type="html"><![CDATA[<p>时间控件处理思路：把它当成一个普通的input框处理就好<br>但是，很多此类型input框都是禁止手动输入的<br>用js把禁止输入的readonly属性干掉就好</p><a id="more"></a><p>js = “document.getElementById(‘txtBeginDate’).removeAttribute(‘readonly’)”  # 1.原生js，移除属性<br>js = “$(‘input[id=txtBeginDate]’).removeAttr(‘readonly’)”  # 2.jQuery，移除属性<br>js = “$(‘input[id=txtBeginDate]’).attr(‘readonly’,false)”  # 3.jQuery，设置为false<br>js = “$(‘input[id=txtBeginDate]’).attr(‘readonly’,’’)”  # 4.jQuery，设置为空（同3）</p><p>driver.execute_script(js)</p><p>2.可用，3、4不可用(可能是大小写的问题，readOnly)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时间控件处理思路：把它当成一个普通的input框处理就好&lt;br&gt;但是，很多此类型input框都是禁止手动输入的&lt;br&gt;用js把禁止输入的readonly属性干掉就好&lt;/p&gt;
    
    </summary>
    
    
      <category term="selenium" scheme="http://yoursite.com/tags/selenium/"/>
    
      <category term="时间控件" scheme="http://yoursite.com/tags/%E6%97%B6%E9%97%B4%E6%8E%A7%E4%BB%B6/"/>
    
      <category term="element" scheme="http://yoursite.com/tags/element/"/>
    
  </entry>
  
  <entry>
    <title>python + selenium 操作鼠标和键盘之ActionChains</title>
    <link href="http://yoursite.com/2018/03/03/python%20+%20selenium%20%E6%93%8D%E4%BD%9C%E9%BC%A0%E6%A0%87%E5%92%8C%E9%94%AE%E7%9B%98%E4%B9%8BActionChains/"/>
    <id>http://yoursite.com/2018/03/03/python + selenium 操作鼠标和键盘之ActionChains/</id>
    <published>2018-03-03T06:19:00.000Z</published>
    <updated>2018-03-28T03:31:58.704Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-运行过程"><a href="#1-运行过程" class="headerlink" title="1.运行过程"></a>1.运行过程</h2><p>ActionChains的执行原理，当你调用ActionChains的方法时，不会立即执行，而是会将所有的操作按顺序存放在一个队列里，当你调用perform()方法时，队列中的事件会依次执行。</p><h2 id="2-引入方法"><a href="#2-引入方法" class="headerlink" title="2.引入方法"></a>2.引入方法</h2><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line">from selenium.webdriver.common.action_chains import ActionChains</span><br></pre></td></tr></table></figure></code></pre><h2 id="3-写法"><a href="#3-写法" class="headerlink" title="3.写法"></a>3.写法</h2><a id="more"></a><h3 id="3-1链式写法"><a href="#3-1链式写法" class="headerlink" title="3.1链式写法"></a>3.1链式写法</h3><pre><code>menu = driver.find_element_by_css_selector(&quot;.nav&quot;)hidden_submenu =    driver.find_element_by_css_selector(&quot;.nav #submenu1&quot;)ActionChains(driver).move_to_element(menu).click(hidden_submenu).perform()</code></pre><h3 id="3-2分步写法"><a href="#3-2分步写法" class="headerlink" title="3.2分步写法"></a>3.2分步写法</h3><pre><code>menu = driver.find_element_by_css_selector(&quot;.nav&quot;)hidden_submenu = driver.find_element_by_css_selector(&quot;.nav #submenu1&quot;)actions = ActionChains(driver)actions.move_to_element(menu)actions.click(hidden_submenu)actions.perform()</code></pre><h2 id="4-方法列表"><a href="#4-方法列表" class="headerlink" title="4.方法列表"></a>4.方法列表</h2><pre><code>click(on_element=None) ——单击鼠标左键click_and_hold(on_element=None) ——点击鼠标左键，不松开context_click(on_element=None) ——点击鼠标右键double_click(on_element=None) ——双击鼠标左键drag_and_drop(source, target) ——拖拽到某个元素然后松开drag_and_drop_by_offset(source, xoffset, yoffset) ——拖拽到某个坐标然后松开key_down(value, element=None) ——按下某个键盘上的键key_up(value, element=None) ——松开某个键move_by_offset(xoffset, yoffset) ——鼠标从当前位置移动到某个坐标move_to_element(to_element) ——鼠标移动到某个元素move_to_element_with_offset(to_element, xoffset, yoffset) ——移动到距某个元素（左上角坐标）多少距离的位置perform() ——执行链中的所有动作release(on_element=None) ——在某个元素位置松开鼠标左键send_keys(*keys_to_send) ——发送某个键到当前焦点的元素send_keys_to_element(element, *keys_to_send) ——发送某个键到指定元素</code></pre><h2 id="5-示例"><a href="#5-示例" class="headerlink" title="5.示例"></a>5.示例</h2><h3 id="5-1移动鼠标"><a href="#5-1移动鼠标" class="headerlink" title="5.1移动鼠标"></a>5.1移动鼠标</h3><pre><code>#coding = utf-8from selenium import webdriverfrom time import sleepfrom selenium.webdriver.common.action_chains import ActionChainsdriver = webdriver.Firefox()driver.get(&quot;************&quot;)assert driver.title == &quot;用户登录&quot;driver.find_element_by_name(&quot;username&quot;).send_keys(&quot;11200000001&quot;)driver.find_element_by_name(&quot;password&quot;).send_keys(&quot;111111&quot;)driver.find_element_by_css_selector(&quot;#login &gt; div &gt; form &gt; div.block.submit &gt; a&quot;).click()sleep(2)ele = driver.find_element_by_xpath(&apos;//*[@id=&quot;sidebar&quot;]/ul/li[4]/a&apos;)ActionChains(driver).move_to_element(ele).perform()driver.find_element_by_css_selector(&quot;#sidebar &gt; ul &gt; li:nth-child(4) &gt; div &gt; p:nth-child(1) &gt; a&quot;).click()sleep(2)driver.quit()</code></pre><h3 id="5-2点击鼠标右键"><a href="#5-2点击鼠标右键" class="headerlink" title="5.2点击鼠标右键"></a>5.2点击鼠标右键</h3><pre><code>#coding = utf-8from selenium import webdriverfrom time import sleepfrom selenium.webdriver.common.action_chains import ActionChainsdriver = webdriver.Firefox()driver.get(&quot;************&quot;)assert driver.title == &quot;用户登录&quot;driver.find_element_by_name(&quot;username&quot;).send_keys(&quot;11200000001&quot;)driver.find_element_by_name(&quot;password&quot;).send_keys(&quot;111111&quot;)driver.find_element_by_css_selector(&quot;#login &gt; div &gt; form &gt; div.block.submit &gt; a&quot;).click()sleep(2)ele = driver.find_element_by_xpath(&apos;//*[@id=&quot;sidebar&quot;]/ul/li[4]/a&apos;)ActionChains(driver).context_click(ele).perform()sleep(2)driver.quit()</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-运行过程&quot;&gt;&lt;a href=&quot;#1-运行过程&quot; class=&quot;headerlink&quot; title=&quot;1.运行过程&quot;&gt;&lt;/a&gt;1.运行过程&lt;/h2&gt;&lt;p&gt;ActionChains的执行原理，当你调用ActionChains的方法时，不会立即执行，而是会将所有的操作按顺序存放在一个队列里，当你调用perform()方法时，队列中的事件会依次执行。&lt;/p&gt;
&lt;h2 id=&quot;2-引入方法&quot;&gt;&lt;a href=&quot;#2-引入方法&quot; class=&quot;headerlink&quot; title=&quot;2.引入方法&quot;&gt;&lt;/a&gt;2.引入方法&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from selenium import webdriver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from selenium.webdriver.common.action_chains import ActionChains&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;3-写法&quot;&gt;&lt;a href=&quot;#3-写法&quot; class=&quot;headerlink&quot; title=&quot;3.写法&quot;&gt;&lt;/a&gt;3.写法&lt;/h2&gt;
    
    </summary>
    
    
      <category term="selenium" scheme="http://yoursite.com/tags/selenium/"/>
    
      <category term="ActionChains" scheme="http://yoursite.com/tags/ActionChains/"/>
    
  </entry>
  
  <entry>
    <title>python + selenium web自动化测试</title>
    <link href="http://yoursite.com/2018/03/02/python%20+%20selenium%20web%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2018/03/02/python + selenium web自动化测试/</id>
    <published>2018-03-02T06:19:00.000Z</published>
    <updated>2018-03-28T03:31:16.960Z</updated>
    
    <content type="html"><![CDATA[<h2 id="driver-attributes"><a href="#driver-attributes" class="headerlink" title="driver attributes"></a>driver attributes</h2><p>调用说明：<br>driver.属性值</p><p>变量说明：<br>1.driver.current_url：用于获得当前页面的URL<br>2.driver.title：用于获取当前页面的标题<br>3.driver.page_source:用于获取页面html源代码<br>4.driver.current_window_handle:用于获取当前窗口句柄<br>5.driver.window_handles:用于获取所有窗口句柄<br><a id="more"></a><br>函数说明：<br>1.driver.find_element*():定位元素<br>2.driver.get(url):浏览器加载url。<br>实例：driver.get(“http//:<a href="http://www.baidu.com&quot;" target="_blank" rel="noopener">www.baidu.com&quot;</a>)<br>3.driver.forward()：浏览器向前（点击向前按钮）。<br>4.driver.back()：浏览器向后（点击向后按钮）。<br>5.driver.refresh()：浏览器刷新（点击刷新按钮）。<br>6.driver.close()：关闭当前窗口，或最后打开的窗口。<br>7.driver.quit():关闭所有关联窗口，并且安全关闭session。<br>8.driver.maximize_window():最大化浏览器窗口。<br>9.driver.set_window_size(宽，高)：设置浏览器窗口大小。<br>10.driver.get_window_size()：获取当前窗口的长和宽。<br>11.driver.get_window_position()：获取当前窗口坐标。<br>12.driver.get_screenshot_as_file(filename):截取当前窗口。<br>实例：driver.get_screenshot_as_file(‘D:/selenium/image/baidu.jpg’)<br>13.driver.implicitly_wait(秒)：隐式等待，通过一定的时长等待页面上某一元素加载完成。<br>若提前定位到元素，则继续执行。若超过时间未加载出，则抛出NoSuchElementException异常。<br>实例：driver.implicitly_wait(10) #等待10秒<br>14.driver.switch_to_frame(id或name属性值)：切换到新表单(同一窗口)。若无id或属性值，可先通过xpath定位到iframe，再将值传给switch_to_frame()<br>15.driver.switch_to.parent_content():跳出当前一级表单。该方法默认对应于离它最近的switch_to.frame()方法。<br>16.driver.switch_to.default_content():跳回最外层的页面。<br>17.driver.switch_to_window(窗口句柄)：切换到新窗口。<br>18.driver.switch_to.window(窗口句柄):切换到新窗口。<br>19.driver.switch_to_alert():警告框处理。处理JavaScript所生成的alert,confirm,prompt.<br>20.driver.switch_to.alert():警告框处理。<br>21.driver.execute_script(js):调用js。<br>22.driver.get_cookies():获取当前会话所有cookie信息。<br>23.driver.get_cookie(cookie_name)：返回字典的key为“cookie_name”的cookie信息。<br>实例：driver.get_cookie(“NET_SessionId”)<br>24.driver.add_cookie(cookie_dict):添加cookie。“cookie_dict”指字典对象，必须有name和value值。<br>25.driver.delete_cookie(name,optionsString):删除cookie信息。<br>26.driver.delete_all_cookies():删除所有cookie信息。</p><h2 id="WebElement-attributes"><a href="#WebElement-attributes" class="headerlink" title="WebElement attributes"></a>WebElement attributes</h2><p>调用说明：<br>driver.find_element<em>.属性值<br>或<br>element=driver.find_element</em><br>element.属性值</p><p>变量说明：<br>1.element.size:获取元素的尺寸。<br>2.element.text：获取元素的文本。<br>3.element.tag_name:获取标签名称。</p><p>函数说明：<br>1.element.clear():清除文本。<br>2.element.send_keys(value):输入文字或键盘按键（需导入Keys模块）。<br>3.element.click()：单击元素。<br>4.element.get_attribute(name):获得属性值<br>5.element.is_displayed():返回元素结果是否可见（True 或 False）<br>6.element.is_selected():返回元素结果是否被选中（True 或 False）<br>7.element.find_element*():定位元素</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;driver-attributes&quot;&gt;&lt;a href=&quot;#driver-attributes&quot; class=&quot;headerlink&quot; title=&quot;driver attributes&quot;&gt;&lt;/a&gt;driver attributes&lt;/h2&gt;&lt;p&gt;调用说明：&lt;br&gt;driver.属性值&lt;/p&gt;
&lt;p&gt;变量说明：&lt;br&gt;1.driver.current_url：用于获得当前页面的URL&lt;br&gt;2.driver.title：用于获取当前页面的标题&lt;br&gt;3.driver.page_source:用于获取页面html源代码&lt;br&gt;4.driver.current_window_handle:用于获取当前窗口句柄&lt;br&gt;5.driver.window_handles:用于获取所有窗口句柄&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="selenium" scheme="http://yoursite.com/tags/selenium/"/>
    
      <category term="driver" scheme="http://yoursite.com/tags/driver/"/>
    
  </entry>
  
  <entry>
    <title>python + selenium WebDriver定位元素</title>
    <link href="http://yoursite.com/2018/03/01/python%20+%20selenium%20WebDriver%E5%AE%9A%E4%BD%8D%E5%85%83%E7%B4%A0/"/>
    <id>http://yoursite.com/2018/03/01/python + selenium WebDriver定位元素/</id>
    <published>2018-03-01T06:19:00.000Z</published>
    <updated>2018-03-28T03:32:59.431Z</updated>
    
    <content type="html"><![CDATA[<h2 id="id定位"><a href="#id定位" class="headerlink" title="id定位"></a>id定位</h2><p>webdriver提供的id定位的方法是通过元素的id属性来查找元素的</p><h3 id="find-element-by-id"><a href="#find-element-by-id" class="headerlink" title="find_element_by_id()"></a>find_element_by_id()</h3><p>eg：<br>driver.find_element_by_id(“LoginFormEmail”)</p><h2 id="name定位"><a href="#name定位" class="headerlink" title="name定位"></a>name定位</h2><a id="more"></a><h3 id="find-element-by-name"><a href="#find-element-by-name" class="headerlink" title="find_element_by_name()"></a>find_element_by_name()</h3><p>eg：通过name定位百度输入框<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input autocomplete=&quot;off&quot; maxlength=&quot;255&quot; value=&quot;&quot; class=&quot;s_ipt&quot; name=&quot;wd&quot; id=&quot;kw&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>find_element_by_name(“wd”).send_keys(“python”)</p><h2 id="class定位"><a href="#class定位" class="headerlink" title="class定位"></a>class定位</h2><p>通过元素类名定位元素</p><h3 id="find-element-by-class-name"><a href="#find-element-by-class-name" class="headerlink" title="find_element_by_class_name()"></a>find_element_by_class_name()</h3><p>eg:元素类名定位百度输入框<br>find_element_by_class_name(“s_ipt”).send_keys(“selenium”)</p><h2 id="tag定位（标签）"><a href="#tag定位（标签）" class="headerlink" title="tag定位（标签）"></a>tag定位（标签）</h2><p>每一个元素本质就是一个tag，但是HTML页面的tag重复性很厉害，一般很少用这个定位。</p><h3 id="find-element-by-tag-name"><a href="#find-element-by-tag-name" class="headerlink" title="find_element_by_tag_name()"></a>find_element_by_tag_name()</h3><p>eg：<br>find_element_by_tag_name（”input”） 通过input标签定位</p><h2 id="link定位"><a href="#link定位" class="headerlink" title="link定位"></a>link定位</h2><p>link定位专门用来定位文本链接</p><h3 id="find-element-by-link-text"><a href="#find-element-by-link-text" class="headerlink" title="find_element_by_link_text()"></a>find_element_by_link_text()</h3><p>百度首页的导航栏代码定位：<br>find_element_by_link_text(“糯米”).click()<br>find_element_by_link_text(“新闻”).click()<br>find_element_by_link_text(“hao123”).click()<br>find_element_by_link_text(“地图”).submit()<br>find_element_by_link_text(“视频”).click()<br>find_element_by_link_text(“贴吧”).click()<br>find_element_by_link_text(“登录”).click()<br>find_element_by_link_text(“设置”).submit()<br>find_element_by_link_text(“更多产品”).click()</p><h2 id="partial-link-定位"><a href="#partial-link-定位" class="headerlink" title="partial link 定位"></a>partial link 定位</h2><p>partial定位是对link定位的一种补充，有些文本很长，这时候我们可以取文本的一部分定位</p><h3 id="find-element-by-partial-link-text"><a href="#find-element-by-partial-link-text" class="headerlink" title="find_element_by_partial_link_text()"></a>find_element_by_partial_link_text()</h3><p>eg：<br><a href="http://www.hao123.com" target="_blank" class="fuks" id="browser">我是一个很长的链接，你点击我就能打开百度了哈哈。</a><br>find_element_by_partial_link_text(“我是一个很长的链接”)<br>find_element_by_partial_link_text(“你点击我就能打开百度了”)</p><h2 id="xpath定位"><a href="#xpath定位" class="headerlink" title="xpath定位"></a>xpath定位</h2><h3 id="find-element-by-xpath"><a href="#find-element-by-xpath" class="headerlink" title="find_element_by_xpath()"></a>find_element_by_xpath()</h3><h4 id="绝对路径定位"><a href="#绝对路径定位" class="headerlink" title="绝对路径定位"></a>绝对路径定位</h4><p>从html标签开始，一层一层往下写标签，直到这个标签位置，这就是绝对路径。<br>登录126邮箱xpath定位：div[3]表示当前层级下的第三个div标签<br>driver.find_element_by_xpath(“/html/body/div[2]/div[2]/div[2]/form/div/div/div[2]/input”).send_keys(“username”)<br>driver.find_element_by_xpath(“/html/body/div[2]/div[2]/div[2]/form/div/div[2]/div[2]/input”).send_keys(“xxx”)<br>driver.find_element_by_xpath(“/html/body/div[2]/div[2]/div[2]/form/div/div[6]/a”).click()</p><p>####利用元素属性定位<br>find_element_by_xpath(“//标签[@属性名=属性值]”)  属性名可以是id、name、class或者其他可唯一标识该标签的元素</p><p>driver.find_element_by_xpath(“.//input[@id=’kw’]”).send_keys(“haha”)<br>driver.find_element_by_xpath(“.//<em>[@id=’su’]”).click()<br>//表示当前页面某个目录下，input表示定位元素的标签名，不指定标签名可以用</em>代替，[@id=’kw’]表示这个元素id属性值是kw。也可以用class、name属性值来定位<br>find_element_by_xpath(“//*[@name=’wd’]”).send_keys(“haha”)<br>find_element_by_xpath(“.//input[@class=’bg s_btn’]”).submit()</p><p>其实也可以用其他属性值都可以，只要他能唯一标识这个元素：(定位126邮箱登录)<br>find_element_by_xpath(“//<em>[@placeholder=’邮箱帐号或手机号’]”).send_keys(‘username’)<br>find_element_by_xpath(“//</em>[@maxthlenght=’16’]”).send_keys(“password”)<br>find_element_by_xpath(“//input[@id=’dologin’]”).submit()</p><p>####层级与属性结合<br>如果一个元素标签本身没有唯一的属性值标识自身，就可以结合层级来定位它了。<br>driver.find_element_by_xpath(“//div[@class=’m-container’]/input”).send_keys(“username”)<br>div[@class=’m-container’]通过class属性定位到父元素，后面/input就表示父元素下的子元素。如果父元素没有唯一的属性值，则可以找其爷爷元素。<br>find_element_by_xpath(“//div[@class=’hsfhg’]/div[2]/input”)<br>find_element_by_xpath(.//*[@id=’SCENES_LOGIN’]/div/div/div[2]/div[4]/button)</p><h4 id="通过逻辑运算符定位"><a href="#通过逻辑运算符定位" class="headerlink" title="通过逻辑运算符定位"></a>通过逻辑运算符定位</h4><p>find_element_by_xpath(“//input[@id=’a’ and @class=’su’]/span/input”)<br>xpath语法通过firepath插件可以生成，可以直接使用的</p><h2 id="CSS定位"><a href="#CSS定位" class="headerlink" title="CSS定位"></a>CSS定位</h2><h3 id="find-element-by-css-selector"><a href="#find-element-by-css-selector" class="headerlink" title="find_element_by_css_selector()"></a>find_element_by_css_selector()</h3><p>css使用选择器来为页面元素绑定属性，可以较为灵活地选择控件的任意属性，一般情况下定位速度要比xpath快</p><pre><code>``````&lt;span class=&quot;bg s_ipt_wr quickdelete-wrap&quot;&gt;  &lt;span class=&quot;soutu-btn&quot;&gt;&lt;/span&gt;  &lt;input id=&quot;kw&quot; class=&quot;s_ipt&quot; autocomplete=&quot;off&quot; maxlength=&quot;255&quot; value=&quot;&quot; name=&quot;wd&quot;&gt;  &lt;a id=&quot;quickdelete&quot; class=&quot;quickdelete&quot; href=&quot;javascript:;&quot; title=&quot;清空&quot; style=&quot;top: 0px; right: 0px; display: none;&quot;&gt;&lt;/a&gt;  &lt;/span&gt;  &lt;span class=&quot;bg s_btn_wr&quot;&gt;  &lt;input id=&quot;su&quot; class=&quot;bg s_btn&quot; type=&quot;submit&quot; value=&quot;百度一下&quot;&gt;  &lt;/span&gt;  ``````  </code></pre><h4 id="通过class属性定位"><a href="#通过class属性定位" class="headerlink" title="通过class属性定位"></a>通过class属性定位</h4><p>find_element_by_css_selector(“.类属性值”)  class选择器选择class=”a”的所有元素，点号(.)表示通过class属性定位元素<br>driver.find_element_by_css_selector(“.s_ipt”).send_keys(“css”)<br>driver.find_element_by_css_selector(“.bg s_btn”).click()</p><h4 id="通过id定位元素"><a href="#通过id定位元素" class="headerlink" title="通过id定位元素"></a>通过id定位元素</h4><p>find_element_by_css_selector(“#id值”) id选择器选择id=”a”的所有元素，#号表示通过id属性定位元素<br>driver.find_element_by_css_selector(“#kw”).send_keys(“huh”)<br>driver.find_element_by_css_selector(“#su”).submit()</p><h4 id="通过标签名定位元素（少用）"><a href="#通过标签名定位元素（少用）" class="headerlink" title="通过标签名定位元素（少用）"></a>通过标签名定位元素（少用）</h4><p>find_element_by_css_selector(“input”)</p><h4 id="通过标签属性定位"><a href="#通过标签属性定位" class="headerlink" title="通过标签属性定位"></a>通过标签属性定位</h4><p>find_element_by_css_selector(“[属性名=属性值]”)<br>driver.find_element_by_css_selector(“[ maxlength=’255’]”).send_keys(“dfaf”)<br>driver.find_element_by_css_selector(“[ value=’百度一下’]”).submit()<br>对于属性值来说，可加引号，也可以不加，但注意和整个字符串的引号进行区分！！</p><h4 id="通过标签父子关系定位（少用）"><a href="#通过标签父子关系定位（少用）" class="headerlink" title="通过标签父子关系定位（少用）"></a>通过标签父子关系定位（少用）</h4><p>find_element_by_css_selector(“父标签&gt;子标签”)<br>find_element_by_css_selector(“span&gt;input”)表示选择父标签为span的所有input元素</p><h4 id="组合定位（通过父子标签和其属性结合）"><a href="#组合定位（通过父子标签和其属性结合）" class="headerlink" title="组合定位（通过父子标签和其属性结合）"></a>组合定位（通过父子标签和其属性结合）</h4><p>组合定位可以大大加强定位元素的唯一性！<br>driver.find_element_by_css_selector(“form#form&gt;span&gt;input”).send_keys(“asfa”)<br>driver.find_element_by_css_selector(“form#form&gt;span&gt;input#su”).click()<br>要定位的元素是input，父元素是span，爷元素是form；<br>要定位的元素是input（可以结合它的属性值），父元素是span，爷元素是form（可以结合它的属性值）<br>其实通过css定位也可以像xpath定位那样通过firebug工具获得再修改，或选择要定位的标签后右键-》复制css路径也行</p><h2 id="通过By定位"><a href="#通过By定位" class="headerlink" title="通过By定位"></a>通过By定位</h2><p>By定位元素是统一调用find_element()的方法。find_element()方法只用于定位元素，它有两个参数，第一个是定位的类型，由By提供；第二个参数是定位的具体方式。<br>使用By之前需要先导入By类：<br>from selenium .webdriver.commom.by import By<br>find_element(By.类型,”具体定位方式”)<br>eg：<br>driver.find_element(By.ID,”kw”).send_keys(“dsfads”)<br>driver.find_element(By.CLASS_NAME,”bg s_btn”).click()<br>find_element(By.NAME,”wd”)<br>find_element(By.XPATH,”//*[@id=’id’]”)<br>find_element(By.LINK_TEXT,”新闻”)<br>find_element(By.PARTIAL_LINK_TEXT,”登”)<br>find_element(By.TAG_NAME,”input”)</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;id定位&quot;&gt;&lt;a href=&quot;#id定位&quot; class=&quot;headerlink&quot; title=&quot;id定位&quot;&gt;&lt;/a&gt;id定位&lt;/h2&gt;&lt;p&gt;webdriver提供的id定位的方法是通过元素的id属性来查找元素的&lt;/p&gt;
&lt;h3 id=&quot;find-element-by-id&quot;&gt;&lt;a href=&quot;#find-element-by-id&quot; class=&quot;headerlink&quot; title=&quot;find_element_by_id()&quot;&gt;&lt;/a&gt;find_element_by_id()&lt;/h3&gt;&lt;p&gt;eg：&lt;br&gt;driver.find_element_by_id(“LoginFormEmail”)&lt;/p&gt;
&lt;h2 id=&quot;name定位&quot;&gt;&lt;a href=&quot;#name定位&quot; class=&quot;headerlink&quot; title=&quot;name定位&quot;&gt;&lt;/a&gt;name定位&lt;/h2&gt;
    
    </summary>
    
    
      <category term="selenium" scheme="http://yoursite.com/tags/selenium/"/>
    
      <category term="element" scheme="http://yoursite.com/tags/element/"/>
    
  </entry>
  
  <entry>
    <title>blog1_about_title</title>
    <link href="http://yoursite.com/2018/02/28/blog1_about_title/"/>
    <id>http://yoursite.com/2018/02/28/blog1_about_title/</id>
    <published>2018-02-28T06:19:58.000Z</published>
    <updated>2018-03-28T03:28:11.543Z</updated>
    
    <content type="html"><![CDATA[<p>This is my first blog.</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><p><a href="https://cn.bing.com/" target="_blank" rel="noopener">biying</a></p><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>这是一个二级标题下边对应的内容。</p><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;This is my first blog.&lt;/p&gt;
&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://cn.bing.com/&quot; t
      
    
    </summary>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
      <category term="title" scheme="http://yoursite.com/tags/title/"/>
    
  </entry>
  
  <entry>
    <title>hello-world(hexo_blog_start)</title>
    <link href="http://yoursite.com/2018/02/28/hello-world(hexo_blog_start)/"/>
    <id>http://yoursite.com/2018/02/28/hello-world(hexo_blog_start)/</id>
    <published>2018-02-28T06:19:00.000Z</published>
    <updated>2018-03-28T03:29:38.273Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="命令" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
</feed>
